//Generated by DataSourceBaseGenerator_Assn

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Text;
using MakerShop.Common;
using MakerShop.Data;
namespace MakerShop.Marketing
{

    /// <summary>
    /// DataSource class for VolumeDiscountGroup objects
    /// </summary>
    public partial class VolumeDiscountGroupDataSource
    {
        /// <summary>
        /// Deletes a VolumeDiscountGroup object from the database
        /// </summary>
        /// <param name="volumeDiscountGroup">The VolumeDiscountGroup object to delete</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static bool Delete(VolumeDiscountGroup volumeDiscountGroup)
        {
            return volumeDiscountGroup.Delete();
        }

        /// <summary>
        /// Deletes a VolumeDiscountGroup object with given id from the database
        /// </summary>
        /// <param name="volumeDiscountId">Value of VolumeDiscountId of the object to delete.</param>
        /// <param name="groupId">Value of GroupId of the object to delete.</param>
        /// <returns><b>true</b> if delete operation is successful, <b>false</b> otherwise</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Delete)]
        public static bool Delete(Int32 volumeDiscountId, Int32 groupId)
        {
            VolumeDiscountGroup volumeDiscountGroup = new VolumeDiscountGroup();
            if (volumeDiscountGroup.Load(volumeDiscountId, groupId)) return volumeDiscountGroup.Delete();
            return false;
        }

        /// <summary>
        /// Inserts/Saves a VolumeDiscountGroup object to the database.
        /// </summary>
        /// <param name="volumeDiscountGroup">The VolumeDiscountGroup object to insert</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Insert)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Insert(VolumeDiscountGroup volumeDiscountGroup) { return volumeDiscountGroup.Save(); }

        /// <summary>
        /// Load a VolumeDiscountGroup object for the given primary key from the database.
        /// </summary>
        /// <param name="volumeDiscountId">Value of VolumeDiscountId of the object to load.</param>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>The loaded VolumeDiscountGroup object.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static VolumeDiscountGroup Load(Int32 volumeDiscountId, Int32 groupId)
        {
            VolumeDiscountGroup volumeDiscountGroup = new VolumeDiscountGroup();
            volumeDiscountGroup.VolumeDiscountId = volumeDiscountId;
            volumeDiscountGroup.GroupId = groupId;
            volumeDiscountGroup.IsDirty = false;
            return volumeDiscountGroup;
        }

        /// <summary>
        /// Loads a collection of VolumeDiscountGroup objects for the given criteria for Group from the database.
        /// </summary>
        /// <param name="groupId">Value of GroupId of the object to load.</param>
        /// <returns>A collection of VolumeDiscountGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static VolumeDiscountGroupCollection LoadForGroup(Int32 groupId)
        {
            VolumeDiscountGroupCollection VolumeDiscountGroups = new VolumeDiscountGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; SELECT VolumeDiscountId");
            selectQuery.Append(" FROM ac_VolumeDiscountGroups");
            selectQuery.Append(" WHERE GroupId = @groupId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@groupId", System.Data.DbType.Int32, groupId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    VolumeDiscountGroup volumeDiscountGroup = new VolumeDiscountGroup();
                    volumeDiscountGroup.GroupId = groupId;
                    volumeDiscountGroup.VolumeDiscountId = dr.GetInt32(0);
                    VolumeDiscountGroups.Add(volumeDiscountGroup);
                }
                dr.Close();
            }
            return VolumeDiscountGroups;
        }

        /// <summary>
        /// Loads a collection of VolumeDiscountGroup objects for the given criteria for VolumeDiscount from the database.
        /// </summary>
        /// <param name="volumeDiscountId">Value of VolumeDiscountId of the object to load.</param>
        /// <returns>A collection of VolumeDiscountGroup objects</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select)]
        public static VolumeDiscountGroupCollection LoadForVolumeDiscount(Int32 volumeDiscountId)
        {
            VolumeDiscountGroupCollection VolumeDiscountGroups = new VolumeDiscountGroupCollection();
            //CREATE THE DYNAMIC SQL TO LOAD OBJECT
            StringBuilder selectQuery = new StringBuilder();
            selectQuery.Append("SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; SELECT GroupId");
            selectQuery.Append(" FROM ac_VolumeDiscountGroups");
            selectQuery.Append(" WHERE VolumeDiscountId = @volumeDiscountId");
            Database database = Token.Instance.Database;
            DbCommand selectCommand = database.GetSqlStringCommand(selectQuery.ToString());
            database.AddInParameter(selectCommand, "@volumeDiscountId", System.Data.DbType.Int32, volumeDiscountId);
            //EXECUTE THE COMMAND
            using (IDataReader dr = database.ExecuteReader(selectCommand))
            {
                while (dr.Read())
                {
                    VolumeDiscountGroup volumeDiscountGroup = new VolumeDiscountGroup();
                    volumeDiscountGroup.VolumeDiscountId = volumeDiscountId;
                    volumeDiscountGroup.GroupId = dr.GetInt32(0);
                    VolumeDiscountGroups.Add(volumeDiscountGroup);
                }
                dr.Close();
            }
            return VolumeDiscountGroups;
        }

        /// <summary>
        /// Updates/Saves the given VolumeDiscountGroup object to the database.
        /// </summary>
        /// <param name="volumeDiscountGroup">The VolumeDiscountGroup object to update/save to database.</param>
        /// <returns><b>SaveResult</b> enumeration that represents the result of the save operation.</returns>
        [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Update)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static SaveResult Update(VolumeDiscountGroup volumeDiscountGroup) { return volumeDiscountGroup.Save(); }

    }
}
